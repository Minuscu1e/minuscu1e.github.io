<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>刷题 on Minusuc1e</title><link>/categories/%E5%88%B7%E9%A2%98/</link><description>Recent content in 刷题 on Minusuc1e</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 11 Oct 2023 00:00:00 -0400</lastBuildDate><atom:link href="/categories/%E5%88%B7%E9%A2%98/index.xml" rel="self" type="application/rss+xml"/><item><title>旋转矩阵</title><link>/blog/code-2023-10-12/</link><pubDate>Wed, 11 Oct 2023 00:00:00 -0400</pubDate><guid>/blog/code-2023-10-12/</guid><description>给你一幅由 N × N 矩阵表示的图像，其中每个像素的大小为 4 字节。请你设计一种算法，将图像旋转 90 度。 不占用额外内存空间能否做到？</description></item><item><title>一次编辑</title><link>/blog/code-2023-10-11/</link><pubDate>Tue, 10 Oct 2023 00:00:00 -0400</pubDate><guid>/blog/code-2023-10-11/</guid><description>字符串有三种编辑操作:插入一个英文字符、删除一个英文字符或者替换一个英文字符。 给定两个字符串，编写一个函数判定它们是否只需要一次(或者零次)编辑。
思路 其实删除和插入在本质上是一种操作，插入是对短的字符串进行添加而删除则是对长的字符串进行移除。那么假设我们始终对长的进行操作，那么这道题中只有两种情况：删除和替换。 替换可以看做是一种在两个字符串下的特殊情况。 最后需要判断一下两个指针是否都走到末尾 代码实现 class Solution { public boolean oneEditAway(String first, String second) { if (first.</description></item><item><title>移动机器人</title><link>/blog/code-2023-10-10/</link><pubDate>Mon, 09 Oct 2023 00:00:00 -0400</pubDate><guid>/blog/code-2023-10-10/</guid><description>有一些机器人分布在一条无限长的数轴上，他们初始坐标用一个下标从 0 开始的整数数组 nums 表示。当你给机器人下达命令时，它们以每秒钟一单位的速度开始移动。 给你一个字符串 s ，每个字符按顺序分别表示每个机器人移动的方向。&amp;lsquo;L&amp;rsquo; 表示机器人往左或者数轴的负方向移动，&amp;lsquo;R&amp;rsquo; 表示机器人往右或者数轴的正方向移动。 当两个机器人相撞时，它们开始沿着原本相反的方向移动。 请你返回指令重复执行 d 秒后，所有机器人之间两两距离之和。由于答案可能很大，请你将答案对 109 + 7 取余后返回。</description></item></channel></rss>